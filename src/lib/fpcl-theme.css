/* Many of the variables in this file are referenced throughout the component library. So the *names* of these variables can NOT be altered at all. For example, you cannot change the name `--fpcl-primary` because `var(--fpcl-primary)` is referenced throughout the components. However, you can change the *values* of any of these variables. You can create a `theme.css` file and add any other variables to that file and then reference those variables in any of the `var()` functions in this file. It is recommended to keep any custom variables separate from the variables in this file so you don't accidentally alter the name of or remove a variable that is referenced throughout the component library.  */

/* TODO: I would like to see if there is a way to give users more control over the editing of the components. Is there a way to allow users to specify what colors get passed to the different parts of each component? Maybe I could create a lot of CSS variables to allow users more fine-grained customizability for their components. For example, I could do something like the following, which would keep the styles consistent across all the components and would help to maintain the same theme across the entire website:

NOTE: Look at how Foundation handles their global styles that can be customized (I think Bootstrap uses a similar concept):
* Documentation: https://get.foundation/sites/docs/global.html
* settings.scss file: https://github.com/foundation/foundation-sites/blob/develop/scss/settings/_settings.scss


/* Colors */
:root {
  /*
    Main Colors
    Taken from https://www.w3schools.com/w3css/w3css_color_metro.asp
  */
  --fpcl-light-green: #99b433;
  --fpcl-green: #00a300;
  --fpcl-dark-green: #1e7145;
  --fpcl-magenta: #ff0097;
  --fpcl-light-purple: #9f00a7;
  --fpcl-purple: #7e3878;
  --fpcl-dark-purple: #603cba;
  --fpcl-teal: #00aba9;
  --fpcl-light-blue: #eff4ff;
  --fpcl-blue: #2d89ef;
  --fpcl-dark-blue: #2b5797;
  --fpcl-yellow: #ffc40d;
  --fpcl-orange: #e3a21a;
  --fpcl-dark-orange: #da532c;
  --fpcl-red: #ee1111;
  --fpcl-dark-red: #b91d47;

  /*
    Neutral Colors
    These are lighter and darker shades of #a0a0a0. See https://www.colorhexa.com/a0a0a0.
  */
  --fpcl-white: #ffffff;
  --fpcl-black: #000000;
  --fpcl-very-light-gray: #eee;
  --fpcl-light-gray: #c7c7c7;
  --fpcl-gray: #a0a0a0;
  --fpcl-dark-gray: #797979;
  --fpcl-very-dark-gray: #343434;

  --fpcl-primary: var(--fpcl-dark-purple);
  --fpcl-secondary: var(--fpcl-very-dark-gray);
  --fpcl-tertiary: var(--fpcl-white);

  --fpcl-success: var(--fpcl-green);
  --fpcl-warning: var(--fpcl-yellow);
  --fpcl-alert: var(--fpcl-red);
}

/* Global Styles */
:root {
  --fpcl-depth-low: 1px;
  --fpcl-depth-md: 2px;
  --fpcl-depth-high: 3px;
  --fpcl-global-text-color: var(--fpcl-very-dark-gray);
  --fpcl-global-radius: 3px;
  --fpcl-global-padding-sm: 5px;
  --fpcl-global-padding-md: 10px;
  --fpcl-global-padding-lg: 15px;
  --fpcl-global-border-width: 1px;
  --fpcl-global-border-style: solid;
  --fpcl-global-border-color: var(--fpcl-light-gray);
  --fpcl-global-border: var(--fpcl-global-border-width) var(--fpcl-global-border-style) var(--fpcl-global-border-color);
  
  /* Box shadows */
  --fpcl-box-shadow-low: 0 0 var(--fpcl-depth-low) var(--fpcl-depth-low) var(--fpcl-very-light-gray);
  --fpcl-box-shadow-md: 0 0 var(--fpcl-depth-md) var(--fpcl-depth-md) var(--fpcl-very-light-gray);
  --fpcl-box-shadow-high: 0 0 var(--fpcl-depth-high) var(--fpcl-depth-high) var(--fpcl-very-light-gray);
}

/* Typography */
:root {
  --fpcl-sm-font-size: 12px;
  --fpcl-base-font-size: 16px;
  --fpcl-lg-font-size: 20px;
  --fpcl-serif-font-stack: "Times New Roman", sans-serif;
  --fpcl-sans-serif-font-stack: "Nunito Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  --fpcl-script-font-stack: script;
  --fpcl-mono-font-stack: mono;
  --fpcl-body-font-stack: var(--fpcl-sans-serif-font-stack);
  --fpcl-headline-font-stack: var(--fpcl-serif-font-stack);
  --fpcl-font-weight-light: 100;
  --fpcl-font-weight-normal: 400;
  --fpcl-font-weight-bold: 700;
}

/* Buttons */
:root {
  /* Inverted buttons use the primary, secondary, and tertiary colors for both the border and text colors. However, regular, non-inverted buttons use the primary, secondary, and tertiary colors for the background and border colors. You can set the text colors for the regular buttons here. */
  --fpcl-btn-regular-primary-text-color: var(--fpcl-white);
  --fpcl-btn-regular-secondary-text-color: var(--fpcl-white);
  --fpcl-btn-regular-tertiary-text-color: var(--fpcl-primary);
  /* v = vertical; h = horizontal */
  --fpcl-btn-sm-padding-v: 8px;
  --fpcl-btn-sm-padding-h: 14px;
  --fpcl-btn-md-padding-v: 9px;
  --fpcl-btn-md-padding-h: 18px;
  --fpcl-btn-lg-padding-v: 10px;
  --fpcl-btn-lg-padding-h: 22px;
  --fpcl-btn-font-weight: var(--fpcl-font-weight-normal);
  --fpcl-btn-icon-margin: 10px;
  /* --fpcl-btn-icon-spin-speed: The speed at which icons for disabled buttons will spin when a button has a loading/disabled state. */
  --fpcl-btn-icon-disabled-spin-speed: 1.5s;
  --fpcl-btn-border-radius: var(--fpcl-global-radius);
}

/* Date Picker */
:root {
  /* The following padding variables will change the sizes that correspond with the <DateInput /> component's `size` prop: */
  /* TODO: Implement the size props and the classes for these variables. */
  --fpcl-date-input-sm-padding: var(--fpcl-global-padding-sm);
  --fpcl-date-input-md-padding: var(--fpcl-global-padding-md);
  --fpcl-date-input-lg-padding: var(--fpcl-global-padding-lg);
  --fpcl-date-input-border: var(--fpcl-global-border);
  --fpcl-date-input-radius: var(--fpcl-global-radius);
  --fpcl-date-picker-box-shadow: var(--fpcl-box-shadow-md);
  --fpcl-date-input-btn-background-color: var(--fpcl-very-light-gray);
  --fpcl-date-picker-text-color: var(--fpcl-global-text-color);
  --fpcl-date-picker-background-color: var(--fpcl-white);
  --fpcl-calendar-border: var(--fpcl-global-border);
  --fpcl-calendar-border-radius: var(--global-radius);
  --fpcl-calendar-selected-date-border: var(--fpcl-global-border);
  --fpcl-calendar-selected-date-text-color: var(--fpcl-global-text-color);
  --fpcl-calendar-selected-date-bg-color: var(--fpcl-very-light-gray);
  
  /* 
   * Width of the datepicker input field.
   * If you want the input field to span the entire width of its parent element, then you can set this value to auto (or "auto").
   * Note that a minimum width constraint is placed on the date input field to keep the styling from breaking. So if you set this width to be less than 148px, then width will stay at 148px.
  */
  --fpcl-date-input-width: 148px;
}

/* Inputs */
:root {
  --fpcl-input-padding: 10px 12px;
  --fpcl-input-border: var(--fpcl-global-border);
  --fpcl-input-bg-color: none;
  --fpcl-input-placeholder-text-color: var(--fpcl-gray);
  --fpcl-input-box-shadow: var(--fpcl-box-shadow-md);
}

/* Labels */
:root {
  --fpcl-label-font-size: 0.8rem;
  --fpcl-label-margin-bottom: 5px;
  --fpcl-label-text-color: var(--fpcl-dark-gray);
}

/* Select Boxes */
:root {
  /* The following padding variables will change the sizes that correspond with the <Select /> component's `size` prop: */
  --fpcl-select-sm-padding: var(--fpcl-global-padding-sm);
  --fpcl-select-md-padding: var(--fpcl-global-padding-md);
  --fpcl-select-lg-padding: var(--fpcl-global-padding-lg);

  --fpcl-select-border: var(--fpcl-global-border);
  --fpcl-select-border-radius: var(--fpcl-global-radius);
  --fpcl-select-box-shadow: var(--fpcl-box-shadow-md);
  --fpcl-select-bg-color: var(--fpcl-white);
  --fpcl-select-text-color: var(--fpcl-global-text-color);
  --fpcl-select-option-border: var(--fpcl-global-border-width) var(--fpcl-global-border-style) var(--fpcl-very-light-gray);
  --fpcl-select-option-hover-bg-color: var(--fpcl-very-light-gray);
  --fpcl-select-option-hover-text-color: var(--fpcl-global-text-color);
}

/* Miscellaneous */
:root {
  --fpcl-disabled-text-color: var(--fpcl-very-light-gray);
  --fpcl-disabled-bg-color: var(--fpcl-black);
}
